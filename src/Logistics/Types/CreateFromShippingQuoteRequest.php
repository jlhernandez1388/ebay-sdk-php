<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\Logistics\Types;

/**
 *
 * @property \DTS\eBaySDK\Logistics\Types\AdditionalOption[] $additionalOptions
 * @property string $labelCustomMessage
 * @property string $labelSize
 * @property string $rateId
 * @property \DTS\eBaySDK\Logistics\Types\Contact $returnTo
 * @property string $shippingQuoteId
 * 
 */
class CreateFromShippingQuoteRequest extends \DTS\eBaySDK\Types\BaseType
{
    /**
     * @var array Properties belonging to objects of this class.
     */
    private static $propertyTypes = [
        'additionalOptions' => [
            'type' => 'DTS\eBaySDK\Logistics\Types\AdditionalOption',
            'repeatable' => true,
            'attribute' => false,
            'elementName' => 'additionalOptions'
        ],
        'labelCustomMessage' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'labelCustomMessage'
        ],
        'labelSize' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'labelSize'
        ],
        'rateId' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'rateId'
        ],
        'returnTo' => [
            'type' => 'DTS\eBaySDK\Logistics\Types\Contact',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'returnTo'
        ],
        'shippingQuoteId' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'shippingQuoteId'
        ]
    ];

    /**
     * @param array $values Optional properties and values to assign to the object.
     */
    public function __construct(array $values = [])
    {
        list($parentValues, $childValues) = self::getParentValues(self::$propertyTypes, $values);

        parent::__construct($parentValues);

        if (!array_key_exists(__CLASS__, self::$properties)) {
            self::$properties[__CLASS__] = array_merge(self::$properties[get_parent_class()], self::$propertyTypes);
        }

        $this->setValues(__CLASS__, $childValues);
    }
}
